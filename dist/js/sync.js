"use strict";function testCreds(callback){$.ajax({url:GLOBALS.SyncServer+"/"+btoa(GLOBALS.userID)+"/check/",type:"GET",headers:{"Authorization":"Basic "+btoa(GLOBALS.userID+":"+GLOBALS.passW)},timeout:GLOBALS.timeout,success:function success(data,status,jqXHR){callback(jqXHR.status)},error:function error(jqXHR,status,msg){callback(jqXHR.status)}})}function sync_getAccount(callback,localAccount){if(GLOBALS.AUTH){console.log("ACCOUNT: sync/merge");$.ajax({url:GLOBALS.SyncServer+"/"+btoa(GLOBALS.userID)+"/account/",type:"GET",headers:{"Authorization":"Basic "+btoa(GLOBALS.userID+":"+GLOBALS.passW)},timeout:GLOBALS.timeout,success:function success(data,status,jqXHR){var newData=data.payload&&isObject(data.payload)?decryptData(data.payload.data):{};var merged=mergeAccount(newData,localAccount);merged["valid"]=data.valid;merged["validDate"]=data.validDate;db_replaceData(function(){sync_pushBack(callback,merged,"account")},merged,"account")},error:function error(data,status,jqXHR){console.log("SYNC-ERROR: Kein Sync des Accounts durchgef\xFChrt !");console.log("SYNC-ERROR (status, data, jqXHR):",status,data,jqXHR);GLOBALS.AUTH=false;localStorage.setItem("auth",false);localStorage.removeItem("TeacherTab");window.location.reload()}})}else{callback(localAccount)}}function sync_getKlasse(callback,classObjectArray){var klassenHash=classObjectArray[0];var klassenObject=classObjectArray.length===1?{}:classObjectArray[1];if(GLOBALS.AUTH){console.log("SYNC:",klassenHash);$.ajax({url:GLOBALS.SyncServer+"/"+btoa(GLOBALS.userID)+"/class/"+klassenHash,type:"GET",headers:{"Authorization":"Basic "+btoa(GLOBALS.userID+":"+GLOBALS.passW)},timeout:GLOBALS.timeout,success:function success(data,status,jqXHR){var newData=data.payload&&isObject(data.payload)?decryptData(data.payload.data):{};if(objLength(newData)>-1){var merged=mergeKlasse(newData,klassenObject);if(merged){db_neueKlasse(function(){db_replaceData(function(){sync_pushBack(callback,merged,["class",klassenHash])},merged,klassenHash,true)},klassenHash,merged[1].name)}else{alert("Diese Klasse kann nicht ge\xF6ffnet werden !\nSie ist weder auf dem Ger\xE4t, noch konnte sie vom Server geladen werden !\nDie Liste wird bereinigt...");db_simpleUpdate(function(){window.location.reload()},1,"klassenliste","delKlasse",klassenHash,"account")}}else{return callback(data.msg)}},error:function error(data,status,jqXHR){console.log("SYNC-ERROR: Kein Sync der Klasse "+klassenObject.name+" ("+klassenHash+") durchgef\xFChrt !");console.log("SYNC-ERROR (status, data, jqXHR):",status,data,jqXHR);callback("\xD6ffne Klasse ohne Sync...")}})}else{callback(klassenObject)}}function sync_pushBack(callback,Data,uri){if(GLOBALS.AUTH){var pushData=Object.assign({},Data);if(pushData.hasOwnProperty("local")){pushData.local=null}console.log("pushing:",pushData);var encrypted=encryptData(pushData);var url=Array.isArray(uri)?uri.filter(function(val){return val}).join("/"):uri;url="/"+url+"/";$.ajax({url:GLOBALS.SyncServer+"/"+btoa(GLOBALS.userID)+url,type:"PUT",dataType:"json",data:{"payload":encrypted},headers:{"Authorization":"Basic "+btoa(GLOBALS.userID+":"+GLOBALS.passW)},timeout:GLOBALS.timeout,success:function success(data,status,jqXHR){console.log("SYNC:",data.payload," changed dataset(s) on server");callback(Data)},error:function error(data,status,jqXHR){console.log("Failed !",data);updateStatus(0,"Server nicht erreicht oder antwortet nicht","Fehler beim Senden der Daten !",false,true)}})}else{console.log("Keine Synchronisierung...");callback(Data)}}function sync_deleteKlasse(id,callback){if(GLOBALS.AUTH){console.log("SYNC: l\xF6sche",id,"vom Server");$.ajax({url:GLOBALS.SyncServer+"/"+btoa(GLOBALS.userID)+"/class/"+id,type:"DELETE",headers:{"Authorization":"Basic "+btoa(GLOBALS.userID+":"+GLOBALS.passW)},timeout:GLOBALS.timeout,success:function success(data,status,jqXHR){if(data.payload){console.log("SYNC: erfolgreich !");callback(data.payload)}else{console.log("SYNC-ERROR: L\xF6schen auf dem Server nicht m\xF6glich");callback(data.msg)}},error:function error(data,status,jqXHR){console.log("SYNC-ERROR: L\xF6schen auf dem Server nicht m\xF6glich");console.log("SYNC-ERROR (status, data, jqXHR):",status,data,jqXHR);callback(false)}})}else{console.log("SYNC: Kein Account mit entsprechenden Berechtigungen eingerichtet");callback("L\xF6sche Klassendaten: Nur lokal (kein Account vorhanden) !")}}function mergeAccount(newData,localData){var account=createAccount(localData.username);account.klassenliste=localData.klassenliste;account.blacklist=localData.blacklist;account.local=localData.local;account.blacklist=removeDups(account.blacklist);account.local=removeDups(account.local);if(Object.keys(newData).length>0){if(newData.blacklist){var newBlacklist=localData.blacklist.concat(newData.blacklist);account.blacklist=removeDups(newBlacklist)}var localHashes=Object.keys(account.klassenliste);var delHash;GLOBALS.dbToGo=0;GLOBALS.dbFinished=0;for(var i=account.blacklist.length-1;i>=0;i--){if(localHashes.indexOf(account.blacklist[i])>-1){delHash=account.blacklist[i];delete account.klassenliste[delHash];GLOBALS.dbToGo+=1;db_dropKlasse(delHash,function(){GLOBALS.dbFinished+=1;console.log("IDB: Deleted",GLOBALS.dbFinished,"( von",GLOBALS.dbToGo,")")})}}waitForDB(function(){if(Object.keys(newData.klassenliste).length>0){for(var hash in newData.klassenliste){if(account.blacklist.indexOf(hash)===-1){if(account.klassenliste.hasOwnProperty(hash)){account.klassenliste[hash]=newData.klassenliste[hash].changed>account.klassenliste[hash].changed?newData.klassenliste[hash]:account.klassenliste[hash]}else{account.klassenliste[hash]=newData.klassenliste[hash]}}}}return account})}return account}function mergeKlasse(newData,localData){if(Object.keys(newData).length===0&&Object.keys(localData).length===0){console.log("MERGE-ERROR: Object-Key ist weder in neuen noch in lokalen Daten vorhanden ?!");return false}else if(Object.keys(newData).length===0){return localData}else if(Object.keys(localData).length===0){return newData}else{var Klasse={};var Blacklist=localData[1].blacklist.concat(newData[1].blacklist);Blacklist=removeDups(Blacklist);var keyList=Object.keys(localData).concat(Object.keys(newData));keyList=removeDups(keyList,Blacklist);for(var row,i=keyList.length-1;i>=0;i--){row=keyList[i];if(isObject(newData[row])&&isObject(localData[row])){if(newData[row].typ!="student"){Klasse[row]=newData[row].changed>localData[row].changed?newData[row]:localData[row]}else{Klasse[row]=Object.assign({},localData[row]);delete Klasse[row].name;Klasse[row].name=newData[row].name.changed>localData[row].name.changed?newData[row].name:localData[row].name;delete Klasse[row].gesamt;Klasse[row].gesamt=newData[row].gesamt.changed>localData[row].gesamt.changed?newData[row].gesamt:localData[row].gesamt;var leistungsArten=["mndl","fspz","schr"];for(var l=leistungsArten.length-1;l>=0;l--){var lArt=leistungsArten[l];Klasse[row][lArt]={};var artKeyList=Object.keys(localData[row][lArt]).concat(Object.keys(newData[row][lArt]));artKeyList=removeDups(artKeyList);for(var k in artKeyList){var lID=artKeyList[k];if(isObject(newData[row][lArt][lID])&&isObject(localData[row][lArt][lID])){Klasse[row][lArt][lID]=newData[row][lArt][lID].changed>localData[row][lArt][lID].changed?newData[row][lArt][lID]:localData[row][lArt][lID]}else if(isObject(newData[row][lArt][lID])&&!isObject(localData[row][lArt][lID])){Klasse[row][lArt][lID]=newData[row][lArt][lID]}else if(!isObject(newData[row][lArt][lID])&&isObject(localData[row][lArt][lID])){Klasse[row][lArt][lID]=localData[row][lArt][lID]}else{console.log("MERGE-ERROR: art",lArt,", lID",lID," ist nirgends vorhanden ?!")}}}}}else if(isObject(newData[row])&&!isObject(localData[row])){Klasse[row]=newData[row]}else if(!isObject(newData[row])&&isObject(localData[row])){Klasse[row]=localData[row]}}Klasse[1].blacklist=Blacklist;return Klasse}}function sync_cleanBlacklist(callback,localAccount){if(GLOBALS.AUTH){console.log("ACCOUNT: clean up blacklist");$.ajax({url:GLOBALS.SyncServer+"/"+btoa(GLOBALS.userID)+"/account/",type:"GET",headers:{"Authorization":"Basic "+btoa(GLOBALS.userID+":"+GLOBALS.passW)},timeout:GLOBALS.timeout,success:function success(data,status,jqXHR){var newData=data.payload&&isObject(data.payload)?decryptData(data.payload.data):{};var merged=mergeAccount(newData,localAccount);merged["blacklist"]=[];merged["valid"]=data.valid;merged["validDate"]=data.validDate;db_replaceData(function(){sync_pushBack(callback,merged,"account")},merged,"account")},error:function error(data,status,jqXHR){console.log("SYNC-ERROR: Kein Clean Up der Blacklist durchgef\xFChrt !");console.log("SYNC-ERROR (status, data, jqXHR):",status,data,jqXHR);GLOBALS.AUTH=false;localStorage.setItem("auth",false);localStorage.removeItem("TeacherTab");window.location.reload()}})}else{localAccount["blacklist"]=[];db_replaceData(function(){callback(localAccount)},localAccount,"account")}}function encryptData(readAble){if(readAble!=""&&readAble){readAble=JSON.stringify(readAble);return CryptoJS.AES.encrypt(readAble,GLOBALS.passW).toString()}else{return""}}function decryptData(unKnown){var readAble=CryptoJS.AES.decrypt(unKnown,GLOBALS.passW).toString(CryptoJS.enc.Utf8);return JSON.parse(readAble)}function hashData(readAble){return CryptoJS.SHA1(readAble).toString()}